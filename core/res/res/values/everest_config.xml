<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C)2022-2023 The EverestOS Project
     SPDX-License-Identifier: Apache-2.0
-->
<resources>
    <!-- Whether devices suports in-display fingerprint when screen is off -->
    <bool name="config_supportsScreenOffUdfps">false</bool>

    <!-- Whether device supports in-display fingerprint -->
    <bool name="config_supportsUdfps">false</bool>

    <!-- Paths to the libraries that contain device specific key handlers -->
    <string-array name="config_deviceKeyHandlerLibs" translatable="false">
    </string-array>

    <!-- Names of the key handler classes -->
    <string-array name="config_deviceKeyHandlerClasses" translatable="false">
    </string-array>

    <!-- Whether to cleanup fingerprints upon connection to the daemon and when user switches -->
    <bool name="config_cleanupUnusedFingerprints">true</bool>

    <!-- The list of components which should be automatically disabled for a specific device.
     Note: this MUST not be used to randomly disable components, ask for approval first! -->
    <string-array name="config_deviceDisabledComponents" translatable="false" />

    <!-- The list of components which should be automatically disabled for all devices. -->
    <string-array name="config_globallyDisabledComponents" translatable="false" />

    <!-- The list of components which should be forced to be enabled. -->
    <string-array name="config_forceEnabledComponents" translatable="false" />

    <!-- Name of a font family to use as light font. For theming purpose. -->
    <string name="config_lightFontFamily" translatable="false">sans-serif-light</string>

    <!-- Name of a font family to use as regular font. For theming purpose. -->
    <string name="config_regularFontFamily" translatable="false">sans-serif-regular</string>

    <!-- Define device configs on boot -->
    <string-array name="global_device_configs_override" translatable="false">
    </string-array>
    <string-array name="device_configs_override" translatable="false">
    </string-array>

    <!-- Whether to use Richtap vibration -->
    <bool name="config_usesRichtapVibration">false</bool>

    <!-- Is the battery LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveBatteryLed">@*android:bool/config_intrusiveNotificationLed</bool>

    <!-- These are system packages exempted from privacy indicator -->
    <string-array name="config_indicatorExemptedPackageNames" translatable="false">
        <item>com.android.bluetooth</item>
        <item>com.android.cellbroadcastservice</item>
        <item>com.android.mms.service</item>
        <item>com.android.networkstack.tethering</item>
        <item>com.android.ons</item>
        <item>com.android.phone</item>
        <item>com.android.printspooler</item>
        <item>com.android.providers.telephony</item>
        <item>com.android.stk</item>
        <item>com.android.systemui</item>
        <item>com.google.android.settings.intelligence</item>
        <item>com.mediatek.ims</item>
        <item>com.qualcomm.qti.cne</item>
        <item>com.shannon.imsservice</item>
        <item>org.pixelexperience.faceunlock</item>
    </string-array>

    <!-- The list of package IDs that are allowed to skip camera high frame rate checks. -->
    <string-array name="config_cameraHFRPrivAppList" translatable="false" />

    <!-- The list of package IDs that are allowed to use aux cameras.
         NOTE: If this list is empty then all apps will be able to use aux cameras. -->
    <string-array name="config_cameraAuxPackageAllowList" translatable="false" />

    <!-- The list of package IDs that are not allowed to use aux cameras. -->
    <string-array name="config_cameraAuxPackageExcludeList" translatable="false" />

     <!-- Display color inversion availability -->
    <bool name="config_displayInversionAvailable">true</bool>

    <!-- Whether device has an alert slider. -->
    <bool name="config_hasAlertSlider">false</bool>

    <!-- Whether to cancel fingerprint operation if not idle -->
    <bool name="config_fpCancelIfNotIdle">false</bool>

    <!-- Whether charging control should be enabled by default -->
    <bool name="config_chargingControlEnabled">false</bool>

    <!-- Default charging control mode.
         This integer should be set to:
         1 - auto - Use the alarm to calculate the time range when to activate charging control
         2 - custom - Use time range when the device is usually charging for hours
         3 - limit - Just limit charging -->
    <integer name="config_defaultChargingControlMode">1</integer>

    <!-- Default time when charging control is activated.
         Represented as seconds from midnight (e.g. 79200 == 10pm). -->
    <integer name="config_defaultChargingControlStartTime">79200</integer>

    <!-- Default time when battery will be fully charged.
         Represented as seconds from midnight (e.g. 21600 == 6am). -->
    <integer name="config_defaultChargingControlTargetTime">21600</integer>

    <!-- Default charging limit. -->
    <integer name="config_defaultChargingControlLimit">80</integer>

    <!-- Considering the fact that the system might have an incorrect estimation of the time to
         full. Set a time margin to make the device fully charged before the target time arrives.
         The unit is minutes and the default value is 30 minutes. If you find that it is not enough
         to make the device to be fully charged at the target time, increase the value
    -->
    <integer name="config_chargingControlTimeMargin">30</integer>

    <!-- For a device that cannot bypass battery when charging stops (that is, the battery current
         is 0mA when charging stops), the battery will gradually discharge. So we need to make it
         recharge when the battery level is lower than a threshold. Set this so that the device
         will be charged between (limit - val) and limit. -->
    <integer name="config_chargingControlBatteryRechargeMargin">10</integer>

    <!-- Default values for LiveDisplay -->
    <bool name="config_enableLiveDisplay">true</bool>
    <integer name="config_dayColorTemperature">6500</integer>
    <integer name="config_nightColorTemperature">4800</integer>
    <integer name="config_outdoorAmbientLux">12000</integer>
    <integer name="config_outdoorAmbientLuxHysteresis">1500</integer>
    <integer name="config_defaultLiveDisplayMode">2</integer>

    <!-- These values should map to the true min and max
        that the backend is capable of adjusting to. This
        is more important when using the ColorBalance mode,
        as the discrete adjustment is interpolated between
        this range (with config_dayColorTemperature at zero) -->
    <integer name="config_minColorTemperature">1000</integer>
    <integer name="config_maxColorTemperature">10000</integer>

    <bool name="config_defaultAutoContrast">false</bool>
    <bool name="config_defaultAutoOutdoorMode">true</bool>
    <bool name="config_defaultColorEnhancement">true</bool>
    <bool name="config_defaultCABC">true</bool>
    <bool name="config_defaultAntiFlicker">false</bool>

    <!-- Display mode remapping table.
        If the mode names returned by the backend do not match
        the predefined and translated strings in the Settings
        app, they can be remapped here. The format is
        "oldname:newname", one per entry. -->
    <string-array name="config_displayModeMappings" translatable="false" />

    <!-- Should we filter any display modes which are unmapped? -->
    <bool name="config_filterDisplayModes">false</bool>

    <!-- Global Actions prefs list -->
    <string-array translatable="false" name="custom_config_globalActionsList">
        <item>emergency</item>
        <item>power</item>
        <item>restart</item>
        <item>advanced</item>
        <item>logout</item>
        <item>users</item>
        <item>silent</item>
        <item>screenshot</item>
        <item>airplane</item>
        <item>settings</item>
        <item>lockdown</item>
        <item>devicecontrols</item>
    </string-array>

    <!-- Default value for proximity check on screen wake
     NOTE ! - Enable for devices that have a fast response proximity sensor (ideally < 300ms)-->
     <bool name="config_proximityCheckOnWake">false</bool>
     <integer name="config_proximityCheckTimeout">250</integer>
     <bool name="config_proximityCheckOnWakeEnabledByDefault">false</bool>

    <!-- Whether device has dash charging support -->
    <bool name="config_hasDashCharger">false</bool>

    <!-- Whether device has warp charging support -->
    <bool name="config_hasWarpCharger">false</bool>

    <!-- Whether device has VOOC charging support -->
    <bool name="config_hasVoocCharger">false</bool>

    <!-- Whether device has turbo power charging support -->
    <bool name="config_hasTurboPowerCharger">false</bool>

    <!-- Path to fast charging status file to detect whether an oem fast charger is active -->
    <string name="config_oemFastChargerStatusPath" translatable="false">/sys/class/power_supply/battery/fastchg_status</string>

    <!-- Path to fast charging status file to detect whether an oem fast charger is active -->
    <string name="config_oemFastChargerStatusPath2" translatable="false"></string>

    <!-- Expected value from fast charging status file  -->
    <string name="config_oemFastChargerStatusValue" translatable="false">1</string>

    <!-- Mock Oplus LinearmotorVibratorService -->
    <bool name="config_mockOplusLinearmotorVibratorService">false</bool>

    <!-- Whether the device supports Smart Pixels -->
    <bool name="config_supportSmartPixels">true</bool>

    <!-- Defines the sysfs attribute path used by the device
         to enable/disable DC dimming. -->
    <string name="config_deviceDcDimmingSysfsNode"></string>

    <!-- Defines the value used by the device sysfs node
         to enable DC dimming -->
    <string name="config_deviceDcDimmingEnableValue">1</string>

    <!-- Defines the value used by the device sysfs node
         to disable DC dimming -->
    <string name="config_deviceDcDimmingDisableValue">0</string>
    
    <!-- Hardware keys present on the device with the ability to wake, stored as a bit field.
       This integer should equal the sum of the corresponding value for each
       of the following keys present:
           1 - Home
           2 - Back
           4 - Menu
           8 - Assistant (search)
          16 - App switch
          32 - Camera
          64 - Volume rocker
       For example, a device with Home, Back and Menu keys would set this
       config to 7. -->
       <integer name="config_deviceHardwareWakeKeys">64</integer>
    
</resources>
